name: Trigger Build on Patch Update

on:
  schedule:
    - cron: "0 15 * * *"
  workflow_dispatch:

jobs:
  check-releases:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Fetch latest tags from repos
        id: fetch_tags
        run: |
          curl -s https://api.github.com/repos/anddea/revanced-patches/releases/latest > release_anddea.json
          curl -s https://api.github.com/repos/revanced/revanced-patches/releases/latest > release_official.json
          curl -s https://api.github.com/repos/inotia00/revanced-patches/releases/latest > release_extended.json

          echo "tag_anddea=$(jq -r .tag_name release_anddea.json)" >> $GITHUB_OUTPUT
          echo "tag_official=$(jq -r .tag_name release_official.json)" >> $GITHUB_OUTPUT
          echo "tag_extended=$(jq -r .tag_name release_extended.json)" >> $GITHUB_OUTPUT

      - name: Initialize missing tag JSON
        id: init_tags
        run: |
          if [ ! -f last_tags.json ]; then
            jq -n --arg a "${{ steps.fetch_tags.outputs.tag_anddea }}" \
                  --arg o "${{ steps.fetch_tags.outputs.tag_official }}" \
                  --arg e "${{ steps.fetch_tags.outputs.tag_extended }}" \
                  '{ anddea: $a, official: $o, extended: $e }' > last_tags.json
            echo "missing=true" >> $GITHUB_OUTPUT
          else
            echo "missing=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit initialized tag file
        if: steps.init_tags.outputs.missing == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          skip_checkout: true
          file_pattern: last_tags.json
          commit_message: "Initialize tag tracking JSON"

      - name: Compare and update tag JSON
        id: compare
        run: |
          LAST_ANDDEA=$(jq -r .anddea last_tags.json)
          LAST_OFFICIAL=$(jq -r .official last_tags.json)
          LAST_EXTENDED=$(jq -r .extended last_tags.json)

          NEW_ANDDEA="${{ steps.fetch_tags.outputs.tag_anddea }}"
          NEW_OFFICIAL="${{ steps.fetch_tags.outputs.tag_official }}"
          NEW_EXTENDED="${{ steps.fetch_tags.outputs.tag_extended }}"

          echo "Comparing $LAST_ANDDEA vs $NEW_ANDDEA"
          echo "Comparing $LAST_OFFICIAL vs $NEW_OFFICIAL"
          echo "Comparing $LAST_EXTENDED vs $NEW_EXTENDED"

          SHOULD_TRIGGER=0

          if [ "$NEW_ANDDEA" != "$LAST_ANDDEA" ]; then
            SHOULD_TRIGGER=1
          fi

          if [ "$NEW_OFFICIAL" != "$LAST_OFFICIAL" ]; then
            SHOULD_TRIGGER=1
          fi

          if [ "$NEW_EXTENDED" != "$LAST_EXTENDED" ]; then
            SHOULD_TRIGGER=1
          fi

          jq -n --arg a "$NEW_ANDDEA" --arg o "$NEW_OFFICIAL" --arg e "$NEW_EXTENDED" \
            '{ anddea: $a, official: $o, extended: $e }' > last_tags.json

          echo "SHOULD_TRIGGER=$SHOULD_TRIGGER" >> $GITHUB_OUTPUT
          echo "old_anddea=$LAST_ANDDEA" >> $GITHUB_OUTPUT
          echo "new_anddea=$NEW_ANDDEA" >> $GITHUB_OUTPUT
          echo "old_official=$LAST_OFFICIAL" >> $GITHUB_OUTPUT
          echo "new_official=$NEW_OFFICIAL" >> $GITHUB_OUTPUT
          echo "old_extended=$LAST_EXTENDED" >> $GITHUB_OUTPUT
          echo "new_extended=$NEW_EXTENDED" >> $GITHUB_OUTPUT

      - name: Commit updated tag JSON
        if: steps.compare.outputs.SHOULD_TRIGGER == '1'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          skip_checkout: true
          file_pattern: last_tags.json
          commit_message: "Update last_tags.json with latest patch versions"

      - name: Generate filtered config.updated.toml
        if: steps.compare.outputs.SHOULD_TRIGGER == '1'
        run: |
          cp config.toml config.updated.toml

          # Anddea
          if [ "${{ steps.compare.outputs.new_anddea }}" != "${{ steps.compare.outputs.old_anddea }}" ]; then
            echo "Keeping Anddea apps enabled"
          else
            awk '
              BEGIN { in_block = 0 }
              /^\[.*-Anddea\]/ { in_block = 1 }
              /^\[[^]]+\]/ && !/.*-Anddea/ { in_block = 0 }
              in_block && /enabled = true/ { sub(/enabled = true/, "enabled = false") }
              { print }
            ' config.updated.toml > tmp && mv tmp config.updated.toml
          fi

          # Official
          if [ "${{ steps.compare.outputs.new_official }}" != "${{ steps.compare.outputs.old_official }}" ]; then
            echo "Keeping official apps enabled"
          else
            awk '
              BEGIN { in_block = 0 }
              /^\[/ { in_block = 1; match($0, /^\[([^\]]+)\]/, m); section = m[1] }
              in_block && /patches-source = "revanced\/revanced-patches"/ { in_official = 1 }
              in_block && /^\[.*\]/ && !/revanced-patches/ { in_official = 0 }
              in_official && /enabled = true/ { sub(/enabled = true/, "enabled = false") }
              { print }
            ' config.updated.toml > tmp && mv tmp config.updated.toml
          fi

          # Extended
          if [ "${{ steps.compare.outputs.new_extended }}" != "${{ steps.compare.outputs.old_extended }}" ]; then
            echo "Keeping Extended apps enabled"
          else
            awk '
              BEGIN { in_block = 0 }
              /^\[.*-Extended\]/ { in_block = 1 }
              /^\[[^]]+\]/ && !/.*-Extended/ { in_block = 0 }
              in_block && /enabled = true/ { sub(/enabled = true/, "enabled = false") }
              { print }
            ' config.updated.toml > tmp && mv tmp config.updated.toml
          fi

      - name: Commit updated config
        if: steps.compare.outputs.SHOULD_TRIGGER == '1'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: "Update config.updated.toml for new patches"
          file_pattern: config.updated.toml

      - name: Trigger Build workflow if needed
        if: steps.compare.outputs.SHOULD_TRIGGER == '1'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: build.yml
          token: ${{ secrets.PAT_TRIGGER_WORKFLOW }}
